Вот пример кода на C++, который считывает значения с аналогового и цифрового порта, анализирует их и выводит результат в последовательный порт:

#include <Arduino.h>

// Определяем пины для аналогового и цифрового ввода
const int analogPin = 34; 
const int digitalPin = 2;

void setup() {
  // Инициализируем последовательный порт
  Serial.begin(115200);
  
  // Настраиваем цифровой порт как вход
  pinMode(digitalPin, INPUT);
}

void loop() {
  // Считываем значение с аналогового порта
  int analogValue = analogRead(analogPin);
  
  // Считываем значение с цифрового порта
  int digitalValue = digitalRead(digitalPin);
  
  // Выводим значения в последовательный порт
  Serial.print("Analog value: ");
  Serial.println(analogValue);
  
  Serial.print("Digital value: ");
  Serial.println(digitalValue);
  
  // Ждем 1 секунду перед следующим измерением
  delay(1000);
}
Этот код считывает значения с аналогового порта analogPin и цифрового порта digitalPin, выводит их в последовательный порт, а затем ждет 1 секунду перед следующим измерением.

Теперь перейдем ко второй задаче - написанию программы на C++ для управления движением робота на плате ESP32.

Для этого нам понадобятся драйверы для управления двигателями робота. Предположим, что у нас есть два мотора, подключенные к портам GPIO платы ESP32.

Вот пример кода, который управляет движением робота вперед на заданное расстояние, используя диаметр колес 4 см:

#include <Arduino.h>

// Определяем пины для управления моторами
const int leftMotorPin1 = 12;
const int leftMotorPin2 = 14;
const int rightMotorPin1 = 27;
const int rightMotorPin2 = 26;

// Определяем диаметр колес в см
const float wheelDiameter = 4.0;

// Определяем расстояние, которое должен проехать робот в см
const float targetDistance = 100.0;

void setup() {
  // Настраиваем пины моторов как выходы
  pinMode(leftMotorPin1, OUTPUT);
  pinMode(leftMotorPin2, OUTPUT);
  pinMode(rightMotorPin1, OUTPUT);
  pinMode(rightMotorPin2, OUTPUT);
}

void loop() {
  // Вычисляем количество оборотов, необходимых для достижения целевого расстояния
  float circumference = PI * wheelDiameter;
  float rotations = targetDistance / circumference;

  // Включаем моторы и едем вперед
  digitalWrite(leftMotorPin1, HIGH);
  digitalWrite(leftMotorPin2, LOW);
  digitalWrite(rightMotorPin1, HIGH);
  digitalWrite(rightMotorPin2, LOW);

  // Ждем, пока робот не проедет целевое расстояние
  for (int i = 0; i < rotations * 100; i++) {
    delay(10);
  }

  // Останавливаем моторы
  digitalWrite(leftMotorPin1, LOW);
  digitalWrite(leftMotorPin2, LOW);
  digitalWrite(rightMotorPin1, LOW);
  digitalWrite(rightMotorPin2, LOW);

  // Ждем 5 секунд перед следующим движением
  delay(5000);
}
Этот код использует пины GPIO для управления двумя моторами робота. Он вычисляет количество оборотов, необходимых для достижения целевого расстояния, исходя из диаметра колес, и затем включает моторы, пока робот не проедет это расстояние. После этого моторы останавливаются, и программа ждет 5 секунд перед следующим движением.

Надеюсь, это поможет Вам в разработке программ для управления роботом на плате ESP32. Если у Вас возникнут дополнительные вопросы, я буду рад на них ответить.